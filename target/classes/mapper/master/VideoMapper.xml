<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqg.mapper.VideoMapper">

    <resultMap id="BaseVideoResultMap" type="com.xqg.domain.VideoEntity">
        <id column="videoid" jdbcType="INTEGER" property="videoId" />
        <result column="userid" jdbcType="INTEGER" property="userId" />
        <result column="videourl" jdbcType="VARCHAR" property="videoUrl" />
        <result column="cover" jdbcType="VARCHAR" property="cover" />

        <result column="title" jdbcType="VARCHAR" property="videoTitle" />
        <result column="introduction" jdbcType="VARCHAR" property="videoIntroduction" />
        <result column="category" jdbcType="VARCHAR" property="category" />
        <result column="categoryid" jdbcType="INTEGER" property="categoryId" />

        <result column="follow_state" jdbcType="INTEGER" property="followState" />
        <result column="favorite_state" jdbcType="INTEGER" property="favoriteState" />
    </resultMap>

    <select id="getMyVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        from videolist v left join user u on u.userId = v.userid

        where v.userid = #{userId , jdbcType=INTEGER}

        order by rand() limit 10;




    </select>


    <select id="getRecommendVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        <choose>

            <when test="loginUserId != null and loginUserId != 0 ">
                , if(ufl.id>0,1,0) as follow_state,if(vfl.id>0,1,0) as favorite_state
            </when>
            <otherwise>
                , 0 as follow_state,0 as favorite_state
            </otherwise>
        </choose>

        from videolist v

            left join user u on u.userId = v.userid

            <if test="userId != null and userId != 0">
                left join user_follow_list ufl on ufl.be_follower_id = #{loginUserId , jdbcType=INTEGER} and ufl.follower_id=u.userId
                left join video_favorite_list vfl on vfl.user_id = #{loginUserId , jdbcType=INTEGER} and vfl.video_id=v.videoid
            </if>

        order by rand() limit 10;

    </select>

    <select id="getHotVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        <choose>

            <when test="userId != null and userId != 0">
                , if(ufl.id>0,1,0) as follow_state,if(vfl.id>0,1,0) as favorite_state
            </when>
            <otherwise>
                , 0 as follow_state,0 as favorite_state
            </otherwise>
        </choose>

        from videolist v

        left join user u on u.userId = v.userid

        <if test="userId != null and userId != 0">
            left join user_follow_list ufl on ufl.be_follower_id = #{loginUserId , jdbcType=INTEGER} and ufl.follower_id=u.userId
            left join video_favorite_list vfl on vfl.user_id = #{loginUserId , jdbcType=INTEGER} and vfl.video_id=v.videoid
        </if>

        order by rand() limit 10;

    </select>


    <select id="getFavoriteVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,v.userId

        from video_favorite_list f left join videolist v on f.video_id = v.videoid

        where f.user_id = #{loginUserId , jdbcType=INTEGER}

        limit 10;

    </select>


</mapper>