<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqg.mapper.VideoMapper">

    <resultMap id="BaseVideoResultMap" type="com.xqg.domain.VideoEntity">
        <id column="videoid" jdbcType="INTEGER" property="videoId" />
        <result column="userid" jdbcType="INTEGER" property="userId" />
        <result column="videourl" jdbcType="VARCHAR" property="videoUrl" />
        <result column="cover" jdbcType="VARCHAR" property="cover" />

        <result column="title" jdbcType="VARCHAR" property="videoTitle" />
        <result column="introduction" jdbcType="VARCHAR" property="videoIntroduction" />
        <result column="category" jdbcType="VARCHAR" property="category" />
        <result column="categoryid" jdbcType="INTEGER" property="categoryId" />

        <result column="follow_state" jdbcType="INTEGER" property="followState" />
        <result column="favorite_state" jdbcType="INTEGER" property="favoriteState" />

    </resultMap>


    <select id="getMyVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        <choose>

            <when test="loginUserId != null and loginUserId != 0 ">
                , if(ufl.id>0,1,0) as follow_state,if(vfl.id>0,1,0) as favorite_state
            </when>
            <otherwise>
                , 0 as follow_state,0 as favorite_state
            </otherwise>
        </choose>

        from videolist v

        left join user u on u.userId = v.userid

        <if test="loginUserId != null and loginUserId != 0">
            left join user_follow_list ufl on ufl.be_follower_id = #{loginUserId , jdbcType=INTEGER} and ufl.follower_id=u.userId
            left join video_favorite_list vfl on vfl.user_id = #{loginUserId , jdbcType=INTEGER} and vfl.video_id=v.videoid
        </if>

        where v.userid = #{userId}



        order by rand();



    </select>


    <select id="getRecommendVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        <choose>

            <when test="loginUserId != null and loginUserId != 0 ">
                , if(ufl.id>0,1,0) as follow_state,if(vfl.id>0,1,0) as favorite_state
            </when>
            <otherwise>
                , 0 as follow_state,0 as favorite_state
            </otherwise>
        </choose>

        from videolist v

            left join user u on u.userId = v.userid

            <if test="loginUserId != null and loginUserId != 0">
                left join user_follow_list ufl on ufl.be_follower_id = #{loginUserId , jdbcType=INTEGER} and ufl.follower_id=u.userId
                left join video_favorite_list vfl on vfl.user_id = #{loginUserId , jdbcType=INTEGER} and vfl.video_id=v.videoid
            </if>

        order by rand() limit 10;

    </select>

    <select id="getHotVideoList" resultMap="BaseVideoResultMap">


        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,u.userId,u.headportrait

        <choose>

            <when test="loginUserId != null and loginUserId != 0">
                , if(ufl.id>0,1,0) as follow_state,if(vfl.id>0,1,0) as favorite_state
            </when>
            <otherwise>
                , 0 as follow_state,0 as favorite_state
            </otherwise>
        </choose>

        from videolist v

        left join user u on u.userId = v.userid

        <if test="loginUserId != null and loginUserId != 0">
            left join user_follow_list ufl on ufl.be_follower_id = #{loginUserId , jdbcType=INTEGER} and ufl.follower_id=u.userId
            left join video_favorite_list vfl on vfl.user_id = #{loginUserId , jdbcType=INTEGER} and vfl.video_id=v.videoid
        </if>

        order by rand() limit 10;

    </select>


    <select id="getFavoriteVideoList" resultMap="BaseVideoResultMap">

        select v.videoid,v.title,v.introduction,v.category,v.categoryid,v.videourl,v.cover,v.userId,u.headportrait

        from

        ((select f.id,f.user_id,f.video_id
          from video_favorite_list f

          where f.user_id = #{userId , jdbcType=INTEGER}

          limit 10) f

          left join videolist v
              left join user u
              on v.userid = u.userId
           on f.video_id = v.videoid) ;

    </select>


    <!--获取视频点赞数-->
    <select id="getVideosPraiseCount" resultType="java.util.HashMap" parameterType="java.lang.Integer">

        SELECT videoId, count(videoId) as num FROM

        (select f.video_id as videoId

        from video_favorite_list f

        where f.video_id in

        <foreach collection="list" item="videoId" index="index" open="(" separator="," close=")">
            #{videoId}
        </foreach>) p GROUP BY videoId;

    </select>


    <!--&lt;!&ndash;获取用户喜欢的视频数&ndash;&gt;-->
    <!--<select id="getFavoriteVideoCount" resultMap="java.lang.Integer" parameterType="java.lang.Integer">-->


        <!--select count(f.id)-->

        <!--from video_favorite_list f-->

        <!--where f.user_id = #{userId , jdbcType=INTEGER}-->

    <!--</select>-->

    <!--&lt;!&ndash;获取用户的自己的视频数&ndash;&gt;-->
    <!--<select id="getMyVideoCount" resultMap="java.lang.Integer" parameterType="java.lang.Integer">-->


        <!--select count(v.videoid)-->

        <!--from videolist v-->

        <!--where v.userid = #{userId , jdbcType=INTEGER}-->

    <!--</select>-->

</mapper>