<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xqg.mapper.UserInfoMapper">
    <resultMap id="BaseResultUserInfoMap" type="com.xqg.domain.UserInfoEntity">
        <id column="userId" jdbcType="INTEGER" property="userId" />
        <result column="nickName" jdbcType="VARCHAR" property="nickName" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="motto" jdbcType="VARCHAR" property="motto" />
        <result column="headportrait" jdbcType="VARCHAR" property="headportrait" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="age" jdbcType="VARCHAR" property="age" />
    </resultMap>

    <resultMap id="BaseResultUserFollowInfoMap" type="com.xqg.domain.UserFollowEntity">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="followerId" jdbcType="INTEGER" property="followerId" />
        <result column="beFollowerId" jdbcType="INTEGER" property="beFollowerId" />

    </resultMap>


    <!--<sql id="Base_Column_List">-->
    <!--id, name, password-->
    <!--</sql>-->
    <!--<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
    <!--select -->
    <!--<include refid="Base_Column_List" />-->
    <!--from user-->
    <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</select>-->
    <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
    <!--delete from user-->
    <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</delete>-->
    <!--<insert id="insert" parameterType="com.xqg.domain.UserEntityEntity">-->
    <!--insert into user (id, name, password-->
    <!--)-->
    <!--values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}-->
    <!--)-->
    <!--</insert>-->
    <!--<insert id="insertSelective" parameterType="com.xqg.domain.UserEntityEntity">-->
    <!--insert into user-->
    <!--<trim prefix="(" suffix=")" suffixOverrides=",">-->
    <!--<if test="id != null">-->
    <!--id,-->
    <!--</if>-->
    <!--<if test="name != null">-->
    <!--name,-->
    <!--</if>-->
    <!--<if test="password != null">-->
    <!--password,-->
    <!--</if>-->
    <!--</trim>-->
    <!--<trim prefix="values (" suffix=")" suffixOverrides=",">-->
    <!--<if test="id != null">-->
    <!--#{id,jdbcType=INTEGER},-->
    <!--</if>-->
    <!--<if test="name != null">-->
    <!--#{name,jdbcType=VARCHAR},-->
    <!--</if>-->
    <!--<if test="password != null">-->
    <!--#{password,jdbcType=VARCHAR},-->
    <!--</if>-->
    <!--</trim>-->
    <!--</insert>-->
    <!--<update id="updateByPrimaryKeySelective" parameterType="com.xqg.domain.UserEntityEntity">-->
    <!--update user-->
    <!--<set>-->
    <!--<if test="name != null">-->
    <!--name = #{name,jdbcType=VARCHAR},-->
    <!--</if>-->
    <!--<if test="password != null">-->
    <!--password = #{password,jdbcType=VARCHAR},-->
    <!--</if>-->
    <!--</set>-->
    <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->
    <!--<update id="updateByPrimaryKey" parameterType="com.xqg.domain.UserEntityEntity">-->
    <!--update user-->
    <!--set name = #{name,jdbcType=VARCHAR},-->
    <!--password = #{password,jdbcType=VARCHAR}-->
    <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->

    <select id="getUserInfo" resultMap="BaseResultUserInfoMap" parameterType="com.xqg.domain.UserInfoEntity">


        select u.userId,u.nickName,u.age,u.motto,u.headportrait,u.phone from userInfo u

        where
        u.delete = 0

        <if test="userId != null">

            and u.userId = #{userId}

        </if>

        <if test="nickName != null and nickName != ''">

            and u.nickName = #{nickName}

        </if>

        <!--<if test="age != null and age != 0">-->

            <!--and u.age = #{age}-->

        <!--</if>-->

        <if test="motto != null and motto != ''">

            and u.motto = #{motto}

        </if>

        <if test="phone != null and phone != ''">

            and u.phone = #{phone}

        </if>;

    </select>

    <insert id="insertUserInfo" parameterType="com.xqg.domain.UserInfoEntity">

        insert into userInfo (

        userId,

        <if test="nickName != null ">
            nickName,

        </if>

        <if test="headportrait != null ">
            headportrait,

        </if>

        <if test="sex != null ">
            sex,

        </if>

        <if test="motto != null ">
            motto,

        </if>

        <if test="age != null ">
            age,
        </if>

        <if test="phone != null ">
            phone,
        </if>

          updateDate,createDate)

        values (

        #{userId},
        <if test="nickName != null ">
            #{nickName},

        </if>

        <if test="headportrait != null ">
            #{headportrait},

        </if>

        <if test="sex != null ">
            #{sex},

        </if>

        <if test="motto != null ">
            #{motto},

        </if>

        <if test="age != null ">
            #{age},
        </if>

        <if test="phone != null ">
            #{phone},
        </if>

        now(),now()

         );
    </insert>

    <update id="updateUserInfo" parameterType="com.xqg.domain.UserInfoEntity">


        update userInfo

        set

        <if test="nickName != null ">
            nickName = #{nickName},
        </if>

        <if test=" headportrait != null ">
            headportrait = #{headportrait},

        </if>

        <if test=" sex != null ">
            sex = #{sex},
        </if>

        <if test="motto != null ">
            motto = #{motto},
        </if>

        <if test=" age != null ">
            age = #{age},
        </if>

        <if test="phone != null ">
            phone = #{phone},
        </if>



        updateDate = now()

        where

        userId = #{userId} and `delete` = 0;

    </update>

    <select id="getFollowInfo" resultMap="BaseResultUserFollowInfoMap" parameterType="com.xqg.domain.UserFollowEntity">

        select f.id,f.followerId,f.beFollowerId from user_follow_list f
        where
        f.followerId = #{followerId}
        and f.beFollowerId = #{beFollowerId};

    </select>
    <insert id="followUser" parameterType="com.xqg.domain.UserFollowEntity">

        insert into user_follow_list (followerId, beFollowerId, createDate )

        values (

        #{followerId},
        #{beFollowerId},now()

        );
    </insert>

    <delete id="unfollowUser" parameterType="com.xqg.domain.UserFollowEntity">
        delete from user_follow_list
        where user_follow_list.followerId = #{followerId} and user_follow_list.beFollowerId = #{beFollowerId};
    </delete>

</mapper>